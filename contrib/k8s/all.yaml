---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kinesis-kafka-connector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kinesis-kafka-connector
  labels:
    app.kubernetes.io/name: kinesis-kafka-connector
    app.kubernetes.io/instance: kinesis-kafka-connector
    app.kubernetes.io/version: snapshot-0.0.9
    app.kubernetes.io/component: kafka-connect
    app.kubernetes.io/part-of: kinesis-kafka-connector
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 15%
      maxSurge: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: kinesis-kafka-connector
      app.kubernetes.io/instance: kinesis-kafka-connector
      app.kubernetes.io/version: snapshot-0.0.9
      app.kubernetes.io/component: kafka-connect
      app.kubernetes.io/part-of: kinesis-kafka-connector
  template:
    metadata:
      name: kinesis-kafka-connector
      labels:
        app.kubernetes.io/name: kinesis-kafka-connector
        app.kubernetes.io/instance: kinesis-kafka-connector
        app.kubernetes.io/version: snapshot-0.0.9
        app.kubernetes.io/component: kafka-connect
        app.kubernetes.io/part-of: kinesis-kafka-connector
    spec:
      serviceAccountName: kinesis-kafka-connector
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: lifecycle
                    operator: In
                    values:
                      - Spot
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - kinesis-kafka-connector
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - kinesis-kafka-connector
                    - key: app.kubernetes.io/version
                      operator: In
                      values:
                        - snapshot-0.0.9
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - kafka-connect
                    - key: app.kubernetes.io/part-of
                      operator: In
                      values:
                        - kinesis-kafka-connector
                topologyKey: failure-domain.beta.kubernetes.io/zone
      nodeSelector:
        beta.kubernetes.io/os: linux
        kubernetes.io/arch: "amd64"
      volumes:
        # mount in tmp so we can safely use from-scratch images and/or read-only containers
        - name: tmp-dir
          emptyDir: {}
      containers:
        - name: kinesis-kafka-connector
          # update the address according to your image repo
          image: 123456789012.dkr.ecr.us-west-2.amazonaws.com/amazon/kinesis-kafka-connector:snapshot-0.0.9
          env:
            - name: BOOTSTRAP_SERVERS
              value: localhost:9092,127.0.0.1:9092
            - name: GROUP_ID
              value: group1
            - name: CONNECTOR_NAME
              value: kinesis-kafka-connector
            - name: REGION
              value: us-west-2
            - name: KINESIS_STREAM
              value: stream1
            - name: KAFKA_TOPICS
              value: topic1,topic2
            - name: MAX_TASKS
              value: "10"
            - name: MAX_CONNECTIONS
              value: "20"
          ports:
            - name: rest-port
              containerPort: 8083
              protocol: TCP
          securityContext:
            readOnlyRootFilesystem: false
          imagePullPolicy: Always
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
---
apiVersion: v1
kind: Service
metadata:
  name: kinesis-kafka-connector
  labels:
    app.kubernetes.io/name: kinesis-kafka-connector
    app.kubernetes.io/instance: kinesis-kafka-connector
    app.kubernetes.io/version: snapshot-0.0.9
    app.kubernetes.io/component: kafka-connect
    app.kubernetes.io/part-of: kinesis-kafka-connector
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  ports:
    - name: rest-port
      port: 8083
      protocol: "TCP"
      targetPort: rest-port
  selector:
    app.kubernetes.io/name: kinesis-kafka-connector
    app.kubernetes.io/instance: kinesis-kafka-connector
    app.kubernetes.io/version: snapshot-0.0.9
    app.kubernetes.io/component: kafka-connect
    app.kubernetes.io/part-of: kinesis-kafka-connector
  type: LoadBalancer
#    type: "NodePort"
